-- 泛型 for 在自己内部保存迭代函数，实际上它保存三个值：迭代函数、状态常量、控制变量

array = {"Google", "Runoob"}

for key, value in ipairs(array) do
    print(key, value)
end

--[[
泛型for的执行过程
1. 首先，初始化，计算 in 后面表达式的值，表达式应该返回泛型 for 需要的三个值：迭代函数、状态常量、控制变量；与多值赋值一样，如果表达式返回的结果个数不足三个会自动用 nil 补足，多出部分会被忽略。
2. 第二，将状态常量和控制变量作为参数调用迭代函数（注意：对于 for 结构来说，状态常量没有用处，仅仅在初始化时获取他的值并传递给迭代函数）
3. 第三，将迭代函数返回的值赋给变量列表
4. 第四，如果返回的第一个值为nil循环结束，否则执行循环体
5. 第五，回到第二步再次调用迭代函数
]]

--[[
在Lua中我们常常使用函数来描述迭代器，每次调用该函数就返回集合的下一个元素。Lua 的迭代器包含以下两种类型：
1. 无状态的迭代器
2. 多状态的迭代器
]]